# NOTE: this is a weird config file bc it is custom written for DReyeVR
# - use hashtags '#' for comments (supports inline)

# some serialization formats:
# FVector: (X=..., Y=..., Z=...) (along XYZ-axes)
# FRotator: (R=..., P=..., Y=...) (for roll, pitch, yaw)
# FTransform: (FVector | FRotator | FVector) = (X=..., Y=..., Z=... | R=..., P=..., Y=... | X=..., Y=..., Z=...)
# bool: True or False

[EgoVehicle]
DashLocation=(X=43.247833, Y=0.0, Z=165.552185) # position offset of dash in vehicle
SpeedometerInMPH=True                  # set to False to use KPH
EnableTurnSignalAction=True            # True to enable turn signal animation (& sound), else false
TurnSignalDuration=3.0                 # time (in s) that the turn signals stay on for
DrawDebugEditor=False                  # draw debug lines/sphere for eye gaze in the editor

[CameraPose]
# location & rotation of camera relative to vehicle (location units in cm, rotation in degrees)
StartingPose="DriversSeat" # starting position of camera in vehicle (on begin play)
# NOTE: we assume the location is suffix'd with "Loc" and rotation is suffixed with "Rot"
DriversSeatLoc=(X=-10.0, Y=0.0, Z=210.0) # location of first-person camera
DriversSeatRot=(R=0.0, P=0.0, Y=0.0)      # rotation of first-person camera
FrontLoc=(X=250.0, Y=0.0, Z=90.0)         # location of camera in front of vehicle
FrontRot=(R=0.0, P=0.0, Y=0.0)            # rotation of camera in front of vehicle
BirdsEyeViewLoc=(X=0.0, Y=0.0, Z=820.0)   # location of camera from top-down bird's eye view
BirdsEyeViewRot=(R=0.0, P=270.0, Y=0.0)   # rotation of camera from top-down bird's eye view
ThirdPersonLoc=(X=-500.0, Y=0.0, Z=380.0) # location of camera in third-person view
ThirdPersonRot=(R=0.0, P=330.0, Y=0.0)    # rotation of camera in third-person view

[CameraParams]
FieldOfView=90.0       # horizontal field of view (only in stereo camera => NOT VR)
ScreenPercentage=100   # 100% is native resolution, increase for supersampling, decrease for subsampling
# all the intensities range from [0 (off) to 1 (maximum)]
MotionBlurIntensity=0  # how much motion blur in the camera
VignetteIntensity=0    # how intense the vignetting is (darkened corners)
BloomIntensity=0       # how intense the bloom is
SceneFringeIntensity=0 # how intense the SceneFringe is
LensFlareIntensity=0   # how intense the lens flares are
GrainIntensity=0       # how intense the grain is

[Mirrors]
# NOTE: mirrors are HIGHLY performance intensive in DReyeVR. If you care more about smooth FPS
# you'll want to set the "XMirrorEnabled" flag to False for each of the 3 mirrors below!!

# rear view mirror
RearMirrorEnabled=False
RearMirrorChassisTransform=(X=48.0, Y=0.0, Z=123.0 | R=0.0, P=0.0, Y=25.06 | X=1.0, Y=1.0, Z=1.0)
RearMirrorTransform=(X=-0.5, Y=0.0, Z=0.0 | R=0.0, P=1.0, Y=0.0 | X=0.9, Y=0.98, Z=0.9)
RearReflectionTransform=(X=-7, Y=0.0, Z=0.0 | R=0.0, P=90.0, Y=0.0 | X=0.002, Y=0.007, Z=1.0)
RearScreenPercentage=85 # used very frequently (85% quality)
# left view side mirror
LeftMirrorEnabled=False
LeftMirrorTransform=(X=62.0, Y=-98.0, Z=105.5 | R=0.0, P=0.0, Y=0.0 | X=0.9, Y=0.9, Z=0.9)
LeftReflectionTransform=(X=0, Y=0, Z=-3.0 | R=43.2, P=81, Y=22.5 | X=0.003, Y=0.005, Z=1.0)
LeftScreenPercentage=65 # used quite a bit (65% quality)
# right view side mirror
RightMirrorEnabled=False
RightMirrorTransform=(X=62, Y=98, Z=100.5 | R=0, P=-4, Y=2.79 | X=0.9, Y=0.9, Z=0.9)
RightReflectionTransform=(X=0.0, Y=0.0, Z=2.22 | R=-1, P=90.0, Y=21.6 | X=0.003, Y=0.005, Z=1.0)
RightScreenPercentage=50 # used very rarely if ever (50% quality)

[SteeringWheel]
InitLocation=(X=35.200001, Y=-0.5, Z=156.5) # position of the steering wheel in the vehicle
InitRotation=(R=0.0, P=0, Y=0.0)   # tilt of the steering wheel at rest
MaxSteerAngleDeg=900                   # max wheel rotation in degrees (pos and negative)
SteeringScale=360                      # scale with which to rotate the wheel (normalized [-1, 1] -> degrees)

[EgoSensor]
StreamSensorData=True    # Set to False to skip streaming sensor data (for PythonAPI) on every tick
MaxTraceLenM=1000.0      # maximum trace length (in meters) to use for world-hit point calculation
DrawDebugFocusTrace=False # draw the debug focus trace & hit point in editor

[VehicleInputs]
ScaleSteeringDamping=0.6
ScaleThrottleInput=1.0
ScaleBrakeInput=1.0
InvertMouseY=False
ScaleMouseY=1.0
ScaleMouseX=1.0

[EgoVehicleHUD]
HUDScaleVR=6               # scale all HUD elements in VR mode only
DrawFPSCounter=True        # draw's FPS (frames per second) in top right corner of flat screen
DrawFlatReticle=False       # reticle in flat-screen mode
DrawGaze=False             # draw debug gaze lines on flat-screen hud
DrawSpectatorReticle=False  # reticle in spectator mode during vr (VR spectator HUD only)
ReticleSize=100            # (percent) diameter of reticle (thickness also scales)
EnableSpectatorScreen=True # whether or not to enable the flat-screen spectator when in VR

[Game]
AutomaticallySpawnEgo=True       # use to spawn EgoVehicle, o/w defaults to spectator & Ego can be spawned via PythonAPI
DoSpawnEgoVehicleTransform=False # True uses the SpawnEgoVehicleTransform below, False uses Carla's own spawn points
SpawnEgoVehicleTransform=(X=3010, Y=390, Z=0.0 | R=0, P=0.0, Y=0 | X=1.0, Y=1.0, Z=1.0) # !! This is only for Town03 !!
EgoVolumePercent=100
NonEgoVolumePercent=100
AmbientVolumePercent=20

[Replayer]
CameraFollowHMD=True    # Whether or not to have the camera pose follow the recorded HMD pose
UseCarlaSpectator=False # Use the built-in Carla spectator (not recommended) or spawn our own (recommended)

# Enable or disable replay interpolation with *ReplayInterpolation*
# True is the default CARLA behavior, this may cause replay timesteps in between ground truth data
# False ensures that every frame will match exactly with the recorded data at the exact timesteps (no interpolation)
ReplayInterpolation=False # see above

# for taking per-frame screen capture during replay (for post-hoc analysis)
RecordFrames=True      # additionally capture camera screenshots on replay tick (requires no replay interpolation!)
RecordAllShaders=False # Enable or disable rendering the scene with additional (beyond RGB) shaders such as depth
RecordAllPoses=False   # Enable or disable rendering the scene with all camera poses (beyond driver's seat)
FileFormatJPG=True     # either JPG or PNG
LinearGamma=True       # force linear gamme for frame capture render (recommended)
FrameWidth=1280        # resolution x for screenshot
FrameHeight=720        # resolution y for screenshot
FrameDir="FrameCap"    # directory name for screenshot
FrameName="tick"       # title of screenshot (differentiated via tick-suffix)

# for Logitech hardware of the racing sim
[Hardware]
DeviceIdx=0      # Device index of the hardware (Logitech has 2, can be 0 or 1)
LogUpdates=False # whether or not to print debug messages

# VariableRateShading is an experimental attempt to squeeze more performance out of DReyeVR
# by reducing rendering quality of the scene in the periphery, which we should know from the real-time 
# gaze tracking. Unfortunately the development to port HTC Vive's VariableRateShading is still WIP and 
# currently only works in the Editor, not in a shipping/package game where it'd be most useful. We are
# actively working on this feature and will enable VRS once it is fully supported.
[VariableRateShading] # disabled by default (would need to enable via CarlaUE4.Build.cs flag)
Enabled=False          # currently only works in Editor mode (but enabled in Build.cs settings)
UsingEyeTracking=False # use eye tracking for foveated rendering if available


[Arduino_Controller]
baud_rate=115200
port_num=3